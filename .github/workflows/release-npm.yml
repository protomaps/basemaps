name: Release NPM

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  release-check:
    name: Check if version changed
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main

      - name: Use Node.js from nvmrc
        uses: actions/setup-node@v4
        with:
          node-version-file: 'styles/.nvmrc'

      - name: Check if version has been updated
        id: check
        uses: EndBug/version-check@v2
        with:
          file-name: styles/package.json
          
    outputs:
      publish: ${{ steps.check.outputs.changed }}

  release:
    name: Release
    needs: release-check
    if: ${{ needs.release-check.outputs.publish == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main

      - name: Use Node.js from nvmrc
        uses: actions/setup-node@v4
        with:
          node-version-file: 'styles/.nvmrc'
          registry-url: 'https://registry.npmjs.org'

      - name: Get version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1

      - name: Install
        run: npm ci

      - name: Prepare release
        id: prepare_release
        run: |
          RELEASE_TYPE=$(node -e "console.log(require('semver').prerelease('${{ steps.package-version.outputs.current-version }}') ? 'prerelease' : 'regular')")
          echo "release_type=$RELEASE_TYPE" >> $GITHUB_OUTPUT

      - name: Check, Test, Build
        run: |
          npm run check
          npm run test
          npm run build

      - name: Publish NPM package (regular)
        if: ${{ steps.prepare_release.outputs.release_type == 'regular' }}
        run: |
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ORG_TOKEN }}

      - name: Publish NPM package (pre-release)
        if: ${{ steps.prepare_release.outputs.release_type == 'prerelease' }}
        run: |
          npm publish --tag next
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ORG_TOKEN }}
